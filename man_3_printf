.\" Automatically generated by Pandoc 2.5
.\"
.TH "_PRINTF" "1" "April 2022" "_print 1.0.0" ""
.hy
.SH NAME
.PP
_printf \- format and print out given inputs
.SH SYPNONSIS
.PP
\f[B]_printf\f[R] \f[I]FORMAT\f[R] [ARGUMENT]\&...
.PD 0
.P
.PD
\f[B]_printf\f[R] \f[I]OPTION\f[R]
.SH DESCRIPTION
.PP
Print out ARGUMENTS(s) accordint to pre\-defined FORMAT
.SS Format of the format string
.PP
The format string is a character string, beginning and ending in its
initial shift state, if any.
The format string is composed of zero or more directives: ordinary
characters (not %), which are copied unchanged to the output stream; and
conversion specifications, each of which results in fetching zero or
more subsequent arguments.
Each conversion specification is introduced by the character %, and ends
with a conversion specifier.
In between there may be (in this order) zero or more flags, an optional
minimum field width, an optional precision and an optional length
modifier.
.SS Conversion specifiers
.PP
A character that specifies the type of conversion to be applied.
The conversion specifiers and their meanings are:
.PP
\f[B]d\f[R], \f[B]i\f[R] The int argument is converted to signed decimal
notation.
The precision, if any, gives the minimum number of digits that must
appear; if the converted value requires fewer digits, it is padded on
the left with zeros.
The default precision is 1.
When 0 is printed with an explicit precision 0, the output is empty.
.PP
\f[B]C\f[R] The int argument is converted to an unsigned char, and the
resulting character is written.
If an l modifier is present, the wint_t (wide character) argument is
converted to a multibyte sequence by a call to the wcrtomb(3) function,
with a conversion state starting in the initial state, and the resulting
multibyte string is written.
.PP
\f[B]S\f[R] The const char * argument is expected to be a pointer to an
array of character type (pointer to a string).
Characters from the array are written up to (but not including) a
terminating null byte (`\[rs]0'); if a precision is specified, no more
than the number specified are written.
If a precision is given, no null byte need be present; if the precision
is not specified, or is greater than the size of the array, the array
must contain a terminating null byte.
Upon successful return, these functions return the number of characters
printed (excluding the null byte used to end output to strings).
.SH EXAMPLES
.PP
_printf(\[lq]Hello %c\[rq], i); _printf(\[lq]Hello %s\[rq]
\[lq]world\[rq]); _printf(\[lq]Length:[%d, %i]\[rq], len, len);
.SH BUGS
.PP
NULL cannot be printed, it throwns an error of segmentation fault
.SH COPYRIGHT
.PP
\&...
.SH AUTHORS
Emem Udoh, Perpetual Meninwa.
